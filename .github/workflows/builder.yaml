name: Builder

env:
  BUILD_ARGS: "--test"
  MONITORED_FILES: "build.yaml config.yaml Dockerfile app"

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  init:
    runs-on: ubuntu-latest
    name: Initialize builds
    outputs:
      changed_addons: ${{ steps.changed_addons.outputs.addons }}
      changed: ${{ steps.changed_addons.outputs.changed }}
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: test GH context
        run: |
          echo "$GITHUB_CONTEXT"| jq
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}

      - name: Get changed files
        id: changed_files
        env:
          CONTEXT_BASE_REF: ${{ github.base_ref }}
          CONTEXT_EVENT: ${{ github.event_name }}
          CONTEXT_PR_BASE_SHA: ${{ github.event.pull_request.base.sha }}
          CONTEXT_PR_HEAD_SHA: ${{ github.event.pull_request.head.sha }}
          CONTEXT_PUSH_BEFORE: ${{ github.event.before }}
          CONTEXT_PUSH_AFTER: ${{ github.event.after }}
        run: |
          set -e
          echo "Base ref: $CONTEXT_BASE_REF"
          echo "Actions event: $CONTEXT_EVENT"
          if [ "$CONTEXT_EVENT" == "pull_request" ]; then
            base_commit=$CONTEXT_PR_BASE_SHA
            head_commit=$CONTEXT_PR_HEAD_SHA
          elif [ "$CONTEXT_EVENT" == "push" ]; then
            base_commit=$CONTEXT_PUSH_BEFORE
            head_commit=$CONTEXT_PUSH_AFTER
          else
            echo "Unknown event type: $CONTEXT_EVENT"
            exit 1
          fi
          echo "Base commit: $base_commit"
          echo "Head commit: $head_commit"
          git fetch origin $base_commit
          diff=$(git diff --name-only --diff-filter=AMRD $base_commit | tr '\n' ' ')
          echo "Changed files: $diff"
          echo "CHANGED_FILES=$diff" >> "$GITHUB_OUTPUT"

      - name: Find add-on directories
        id: addons
        uses: home-assistant/actions/helpers/find-addons@master

      - name: Get changed add-ons
        id: changed_addons
        run: |
          declare -a changed_addons
          for addon in ${{ steps.addons.outputs.addons }}; do
            if [[ "${{ steps.changed_files.outputs.CHANGED_FILES }}" =~ $addon ]]; then
              for file in ${{ env.MONITORED_FILES }}; do
                  if [[ "${{ steps.changed_files.outputs.CHANGED_FILES }}" =~ $addon/$file ]]; then
                    if [[ ! "${changed_addons[@]}" =~ $addon ]]; then
                      changed_addons+=("\"${addon}\",");
                    fi
                  fi
              done
            fi
          done

          changed=$(echo ${changed_addons[@]} | rev | cut -c 2- | rev)

          if [[ -n ${changed} ]]; then
            echo "Changed add-ons: $changed";
            echo "changed=true" >> $GITHUB_OUTPUT;
            echo "addons=[$changed]" >> $GITHUB_OUTPUT;
          else
            echo "No add-on had any monitored files changed (${{ env.MONITORED_FILES }})";
          fi
  build:
    needs: init
    runs-on: ubuntu-latest
    if: needs.init.outputs.changed == 'true'
    name: Build ${{ matrix.arch }} ${{ matrix.addon }} add-on
    strategy:
      matrix:
        addon: ${{ fromJson(needs.init.outputs.changed_addons) }}
        arch: ["aarch64", "amd64", "armhf", "armv7", "i386"]

    steps:
      - name: Check out repository
        uses: actions/checkout@v4.1.2

      - name: Get information
        id: info
        uses: home-assistant/actions/helpers/info@master
        with:
          path: "./${{ matrix.addon }}"

      - name: Check if add-on should be built
        id: check
        run: |
          if [[ "${{ steps.info.outputs.architectures }}" =~ ${{ matrix.arch }} ]]; then
             echo "build_arch=true" >> $GITHUB_OUTPUT;
             echo "image=$(echo ${{ steps.info.outputs.image }} | cut -d'/' -f3)" >> $GITHUB_OUTPUT;
             if [[ -z "${{ github.head_ref }}" ]] && [[ "${{ github.event_name }}" == "push" ]]; then
                 echo "BUILD_ARGS=" >> $GITHUB_ENV;
             fi
           else
             echo "${{ matrix.arch }} is not a valid arch for ${{ matrix.addon }}, skipping build";
             echo "build_arch=false" >> $GITHUB_OUTPUT;
          fi

      # - name: Login to GitHub Container Registry
      #   if: env.BUILD_ARGS != '--test'
      #   uses: docker/login-action@v2.2.0
      #   with:
      #     registry: ghcr.io
      #     username: ${{ github.repository_owner }}
      #     password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build ${{ matrix.addon }} add-on
        if: steps.check.outputs.build_arch == 'true'
        uses: home-assistant/builder@2024.03.5
        with:
          args: |
            ${{ env.BUILD_ARGS }} \
            --${{ matrix.arch }} \
            --target /data/${{ matrix.addon }} \
            --image "${{ steps.check.outputs.image }}" \
            --docker-hub "ghcr.io/${{ github.repository_owner }}" \
            --addon
